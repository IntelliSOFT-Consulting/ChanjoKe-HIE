sql = (
    """SELECT DISTINCT PIM.patient_id, PIM.family_name, PIM.given_name, PIM.national_id, PIM.patient_update_date, COALESCE(PIM.phone, CONCAT(PIM.pat_relation_tel, ' (', PIM.pat_relation, ')')) AS phone, PIM.gender, PIM.birthDate, PIM.the_age, PIM.age_y, PIM.age_m, PIM.age_group, PIM.active, PIM.deceased, PIM.maritalStatus, PIM.multipleBirth, PIM.pat_relation, PIM.pat_relation_name, PIM.pat_relation_tel, PIM.Due_Date, ORG.county, ORG.subcounty, ORG.ward, ORG.facility, PIM.facility_code, PIM.the_vaccine_seq, PIM.vaccineCode, PIM.vaccineName, PIM.vaccineCategory, PIM.the_dose, PIM.description, PIM.series, PIM.occ_date, PIM.Days_From_Due, PIM.faci_outr, CASE WHEN PIM.Days_From_Due IS NULL THEN 'Missed Immunization' WHEN PIM.Days_From_Due = 0 THEN 'Immunized On Time' WHEN PIM.Days_From_Due > 0 AND PIM.Days_From_Due < 15 THEN 'Immunized Late (Within 14 Days)' WHEN PIM.Days_From_Due > 14 THEN 'Immunized Late (After 14 Days)' WHEN PIM.Days_From_Due < 0 THEN 'Immunized Before Due Date' END AS imm_status, CASE WHEN (PIM.Due_Date +14)<CURRENT_DATE() AND PIM.occ_date IS NULL THEN 'Yes' END AS imm_status_defaulter FROM ( SELECT DISTINCT PA.patient_update_date, PA.patient_id, PA.family_name, PA.given_name, PA.national_id, PA.phone, PA.gender, PA.birthDate, PA.the_age, PA.age_y, PA.age_m, PA.age_group, PA.active, PA.deceased, PA.maritalStatus, PA.multipleBirth, PA.pat_relation, PA.pat_relation_name, PA.pat_relation_tel, IM.Due_Date, IM.the_vaccine_seq, IM.vaccineCode, IM.vaccineName, IM.vaccineCategory, IM.the_dose, IM.description, IM.series, IM.occ_date, IM.facility_code, IM.Days_From_Due, IM.faci_outr FROM ( SELECT DISTINCT id AS patient_id, CAST(LEFT(exploded_meta.lastUpdated, 10) AS DATE) AS patient_update_date, family_name, CONCAT(exploded_given_name[0].given[0], ' ', exploded_given_name[0].given[1]) AS given_name, exploded_identify.value[0] AS national_id, phone, gender, CAST(LEFT(birthDate, 10) AS DATE) AS birthDate, CONCAT( FLOOR(DATEDIFF(CURRENT_DATE, birthDate) / 365.25), ' years and ', FLOOR((DATEDIFF(CURRENT_DATE, birthDate) % 365.25) / 30.44), ' months' ) AS the_age, DATEDIFF(year, CAST(LEFT(birthDate, 10) AS DATE), CURRENT_DATE) as age_y, DATEDIFF(month, CAST(LEFT(birthDate, 10) AS DATE), CURRENT_DATE) as age_m, CASE WHEN DATEDIFF(month, CAST(LEFT(birthDate, 10) AS DATE), CURRENT_DATE) <= 12 THEN 'Under 1 Year' ELSE 'Above 1 Year' END AS age_group, active, deceased, maritalStatus, exploded_multipleBirth.integer as multipleBirth, exploded_contact.relationship[0].text[0] AS pat_relation, exploded_contact.name.given[0][0] AS pat_relation_name, exploded_contact.telecom[0].value[0] AS pat_relation_tel FROM Patient LATERAL VIEW explode(name.family) AS family_name LATERAL VIEW explode(array(name)) AS exploded_given_name LATERAL VIEW explode(telecom.value) AS phone LATERAL VIEW explode(array(identifier)) AS exploded_identify LATERAL VIEW explode(array(contact)) AS exploded_contact LATERAL VIEW explode(array(multipleBirth)) AS exploded_multipleBirth LATERAL VIEW explode(array(meta)) AS exploded_meta ORDER BY patient_id ) AS PA LEFT JOIN ( SELECT DISTINCT Q1.patient_id, Q1.earliest_imm_date AS Due_Date, Q1.the_vaccine_seq, Q1.vaccineCode, Q1.vaccineName, CASE WHEN Q1.vaccineName IN ('BCG', 'bOPV', 'OPV I', 'DPT-HepB+Hib 1', 'PCV10 1', 'Rotavirus 1', 'OPV II', 'DPT-HepB+Hib 2', 'PCV10 2', 'Rotavirus 2', 'OPV III', 'DPT-HepB+Hib 3', 'PCV10 3', 'IPV', 'Rotavirus 3', 'Vitamin A 1st Dose', 'Measles-Rubella', 'RTS/AS01 (Malaria Vaccine - 1)', 'RTS/AS01 (Malaria Vaccine - 2)', 'Measles-Rubella 1st Dose', 'Yellow Fever', 'RTS/AS01 (Malaria Vaccine - 3)', 'Vitamin A 2nd Dose', 'Albendazole 1st Dose', 'Albendazole 2nd Dose', 'Albendazole 3rd Dose', 'Albendazole 4th Dose', 'Albendazole 5th Dose', 'Albendazole 6th Dose', 'Albendazole 7th Dose', 'Albendazole 8th Dose', 'Albendazole 9th Dose', 'Measles-Rubella 2nd Dose', 'Vitamin A 3rd Dose', 'Rota Virus 1st Dose', 'RTS/AS01 (Malaria Vaccine - 4)', 'Rota Virus 2nd Dose', 'Rota Virus 3rd Dose') THEN 'Routine Vaccine' WHEN Q1.vaccineName IN ('HPV Vaccine 1', 'HPV Vaccine 2', 'AstraZeneca', 'AstraZeneca 2nd Dose', 'Johnson & Johnson', 'Pfizer/BioNTech 1st Dose', 'Pfizer/BioNTech 2nd Dose', 'Moderna 1st Dose', 'Moderna 2nd Dose', 'Sinopharm 1st Dose', 'Sinopharm 2nd Dose', 'Tetanus 1', 'Tetanus 2', 'Tetanus 3', 'Tetanus 4', 'Tetanus 5', 'Yellow Fever', 'Rabies 1', 'Rabies 2', 'Rabies 3', 'Rabies 4', 'Rabies 5', 'Influenza 1', 'Influenza 2', '1st Rabies Dose', '2nd Rabies Dose', '3rd Rabies Dose', '4th Rabies Dose', '5th Rabies Dose') THEN 'Non-Routine Vaccine' ELSE 'Unknown' END AS vaccineCategory, Q1.the_dose, Q1.description, Q1.series, Q2.occ_date, Q2.facility_code, DATEDIFF(Q2.occ_date, Q1.earliest_imm_date) AS Days_From_Due, Q2.faci_outr FROM ( SELECT DISTINCT patient_id, idx AS the_vaccine_seq, explode_recommendation.vaccineCode[idx].coding[0].display[0] AS vaccineCode, explode_recommendation.vaccineCode[idx].text[0] AS vaccineName, explode_recommendation.doseNumber[idx].positiveInt as the_dose, explode_recommendation.targetDisease.text[idx] AS targetDisease, explode_recommendation.contraindicatedVaccineCode[idx].text[0] AS contraindicatedVaccineCode, explode_recommendation.forecastStatus.text[idx] AS forecastStatus, explode_recommendation.forecastReason[idx].text[0] AS forecastReason, CAST(LEFT(explode_recommendation.dateCriterion[idx].value[0], 10) AS DATE) AS earliest_imm_date, CAST(LEFT(explode_recommendation.dateCriterion[idx].value[1], 10) AS DATE) AS latest_imm_date, DATEDIFF(CAST(LEFT(explode_recommendation.dateCriterion[idx].value[1], 10) AS DATE), CAST(LEFT(explode_recommendation.dateCriterion[idx].value[0], 10) AS DATE)) AS imm_window_period, explode_recommendation.description[idx] AS description, explode_recommendation.series[idx] AS series, explode_recommendation.doseNumber[idx].string AS doseNumber, explode_recommendation.seriesDoses[idx].string AS seriesDoses, explode_recommendation.supportingImmunization[idx].immunizationId[0] AS supportingImmunization_ID, explode_recommendation.supportingPatientInformation[idx] AS supportingPatientInformation FROM ImmunizationRecommendation CROSS JOIN ( SELECT DISTINCT 0 AS idx UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10 UNION ALL SELECT 11 UNION ALL SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL SELECT 15 UNION ALL SELECT 16 UNION ALL SELECT 17 UNION ALL SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL SELECT 24 UNION ALL SELECT 25 UNION ALL SELECT 26 UNION ALL SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30 UNION ALL SELECT 31 UNION ALL SELECT 32 UNION ALL SELECT 33 UNION ALL SELECT 34 UNION ALL SELECT 35 UNION ALL SELECT 36 UNION ALL SELECT 37 UNION ALL SELECT 38 UNION ALL SELECT 39 UNION ALL SELECT 40 UNION ALL SELECT 41 UNION ALL SELECT 42 UNION ALL SELECT 43 UNION ALL SELECT 44 UNION ALL SELECT 45 UNION ALL SELECT 46 UNION ALL SELECT 47 UNION ALL SELECT 48 UNION ALL SELECT 49 UNION ALL SELECT 50 UNION ALL SELECT 51 UNION ALL SELECT 52 UNION ALL SELECT 53 UNION ALL SELECT 54 UNION ALL SELECT 55 UNION ALL SELECT 56 UNION ALL SELECT 57 UNION ALL SELECT 58 UNION ALL SELECT 59 UNION ALL SELECT 60 ) AS idxs LATERAL VIEW explode(array(patient.patientId)) AS patient_id LATERAL VIEW explode(array(recommendation)) AS explode_recommendation WHERE CAST(LEFT(explode_recommendation.dateCriterion[idx].value[0], 10) AS DATE) <= CURRENT_DATE() ORDER BY patient_id, the_vaccine_seq ) AS Q1 LEFT JOIN ( SELECT DISTINCT id AS immunization_id, exploded_facility.locationid AS facility_code, exploded_faci_outr.text[0] AS faci_outr, patient_id, encounter_id, CAST(LEFT(exploded_dateTime, 10) AS DATE) AS occ_date, CAST(LEFT(exploded_lastdate, 10) AS DATE) AS lastUpdated_date, exploded_code.display AS vaccineCode, exploded_dose.value AS dose_qty, exploded_protocol[0].text[0] AS the_protocol FROM Immunization LATERAL VIEW explode(array(patient.patientId)) AS patient_id LATERAL VIEW explode(vaccineCode.coding) AS exploded_code LATERAL VIEW explode(array(occurrence.dateTime)) AS exploded_dateTime LATERAL VIEW explode(array(meta.lastUpdated)) AS exploded_lastdate LATERAL VIEW explode(array(encounter.encounterId)) AS encounter_id LATERAL VIEW explode(array(doseQuantity)) AS exploded_dose LATERAL VIEW explode(array(protocolApplied.targetDisease)) AS exploded_protocol LATERAL VIEW explode(array(location)) AS exploded_facility LATERAL VIEW explode(array(note)) AS exploded_faci_outr WHERE status='completed' ORDER BY patient_id ) AS Q2 ON Q1.patient_id = Q2.patient_id AND Q1.vaccineCode = Q2.vaccineCode WHERE Q1.earliest_imm_date <= CURRENT_DATE() ) AS IM ON PA.patient_id = IM.patient_id ORDER BY facility_code ) AS PIM LEFT JOIN ( SELECT DISTINCT S.partof_name AS county, W.partof_name AS subcounty, F.partof_id AS ward, F.partof_name AS facility, F.loc_id AS mfl_code FROM ( SELECT DISTINCT id AS loc_id, exploded_type.code[0] AS type_code, exploded_type.display[0] AS type_name, exploded_partof.locationId AS partof_id, exploded_partof.display AS partof_name FROM location LATERAL VIEW explode(array(type[0].coding)) AS exploded_type LATERAL VIEW explode(array(partof)) AS exploded_partof WHERE exploded_type.code[0]='FACILITY' ) AS F LEFT JOIN ( SELECT DISTINCT id AS loc_id, exploded_type.code[0] AS type_code, exploded_type.display[0] AS type_name, exploded_partof.locationId AS partof_id, exploded_partof.display AS partof_name FROM location LATERAL VIEW explode(array(type[0].coding)) AS exploded_type LATERAL VIEW explode(array(partof)) AS exploded_partof WHERE exploded_type.code[0]='WARD' ) AS W ON F.partof_id = W.loc_id LEFT JOIN ( SELECT DISTINCT id AS loc_id, exploded_type.code[0] AS type_code, exploded_type.display[0] AS type_name, exploded_partof.locationId AS partof_id, exploded_partof.display AS partof_name FROM location LATERAL VIEW explode(array(type[0].coding)) AS exploded_type LATERAL VIEW explode(array(partof)) AS exploded_partof WHERE exploded_type.code[0]='SUB-COUNTY' ) AS S ON W.partof_id = S.loc_id ORDER BY mfl_code ) AS ORG ON PIM.facility_code = ORG.mfl_code ORDER BY PIM.patient_id, PIM.the_vaccine_seq;""",
)
